---
description: Require derivations to enable doCheck, use check and installCheck phases, declare passthru.tests and meta.tests, and fill meta attributes for reliable testing and QA.
globs: *.nix
alwaysApply: false
---

## Description
This rule enforces best practices for testing and quality assurance in Nix derivations.

## Rule Details
- Enable tests by default with `doCheck = true`
- Use `checkPhase` for running unit and integration tests
- Use `installCheckPhase` for post-installation tests
- Use `passthru.tests` for running additional test suites
- Use `meta.tests` for documenting test coverage
- Use `meta.broken` to mark broken packages
- Use `meta.platforms` to specify supported platforms
- Use `meta.maintainers` to list package maintainers
- Use `meta.license` to specify package licenses
- Use `meta.homepage` to link to package documentation

## Examples

### Good
```nix
{ lib
, stdenv
, python3
}:

stdenv.mkDerivation rec {
  pname = "tested-package";
  version = "1.0.0";

  src = ./src;

  nativeBuildInputs = [ python3 ];

  # Enable and configure tests
  doCheck = true;
  checkPhase = ''
    runHook preCheck
    python -m pytest tests/
    runHook postCheck
  '';

  # Post-installation tests
  doInstallCheck = true;
  installCheckPhase = ''
    runHook preInstallCheck
    $out/bin/my-program --test
    runHook postInstallCheck
  '';

  # Additional test suites
  passthru.tests = {
    integration = import ./tests/integration.nix { inherit stdenv; };
  };

  meta = with lib; {
    description = "A well-tested package";
    homepage = "https://github.com/owner/repo";
    license = licenses.mit;
    platforms = platforms.all;
    maintainers = with maintainers; [ /* list of maintainers */ ];
    broken = false;
    tests = {
      unit = true;
      integration = true;
    };
  };
}
```

### Bad
```nix
{ stdenv }:

stdenv.mkDerivation {
  name = "untested-package";
  src = ./src;

  # Missing test configuration
  # Missing meta information
  # Missing platform specifications
}
```

## Why
- Comprehensive testing ensures package reliability
- Post-installation tests verify correct installation
- Additional test suites catch integration issues
- Proper meta information helps users and maintainers
- Platform specifications prevent installation on unsupported systems
- License and maintainer information ensures proper package maintenance

## References
- [Nixpkgs Manual - Testing](mdc:https:/nixos.org/nixpkgs/manual/#chap-testing)
- [Nixpkgs Manual - Meta Attributes](mdc:https:/nixos.org/nixpkgs/manual/#chap-meta)
